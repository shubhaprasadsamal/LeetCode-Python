Binary Tree | Set 2 (Properties)
We have discussed Introduction to Binary Tree in set 1. In this post, properties of binary are discussed.

1) The maximum number of nodes at level ‘l’ of a binary tree is 2l.
Here level is the number of nodes on the path from the root to the node (including root and node). Level of the root is 0.
This can be proved by induction.
For root, l = 0, number of nodes = 20 = 1
Assume that the maximum number of nodes on level ‘l’ is 2l
Since in Binary tree every node has at most 2 children, next level would have twice nodes, i.e. 2 * 2l


2) Maximum number of nodes in a binary tree of height ‘h’ is  2^h+1 – 1


3) In a Binary Tree with N nodes, minimum possible height or minimum number of levels is [FN GURUKUL with NAVAL KISHOR LODHI]

total number of node is : N
we have to find the height
=> 2^h+1 - 1 = N
=> 2^h+1 = N+1
=> log2(2^h+1) = log2(N+1)
=> h+1 = log2(N+1)
=> h = log2(N+1)-1

*******Need to understand More********
4) A Binary Tree with L leaves has at least   ? Log2L ? + 1   levels
A Binary tree has maximum number of leaves (and minimum number of levels) when all levels are fully filled. Let all leaves be at level l, then below is true for number of leaves L.

   L   <=  2l-1  [From Point 1]
   l =   ? Log2L ? + 1
   where l is the minimum number of levels.

5) In Binary tree where every node has 0 or 2 children, number of leaf nodes is always one more than nodes with two children.

   L = T + 1
Where L = Number of leaf nodes
      T = Number of internal nodes with two children

6) How many binary tree can be formed from the node n? [FN GURUKUL with NAVAL KISHOR LODHI]
Un labeled: (If there is no name of the node)

2nCn/n+1 = 2n!/(2n-n)!n!(n+1)
If we have 3 nodes: 2*3C3/3+1
=6C3/4
=6!/(6-3)!3!4
=6*5*4*3*2*1/3!3!4
=6*5*4*3*2*1/3*2*1*3*2*1*4
=5

Labeled: (If there is name of the node)

(2nCn/n+1)*n!


